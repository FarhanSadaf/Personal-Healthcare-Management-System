
@*@model PersonalHealthcareManagementSystem.Models.specialist.Specialist*@
@model PersonalHealthcareManagementSystem.Models.specialist.AdminEditSpecialist

@{
    ViewBag.Title = "EditSpecialist";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container">

    @using (Html.BeginForm("EditSpecialist", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="col-md-7 mx-auto mt-3">
                <div class="card border-info">
                    <div class="card-body">
                        <div class="row">
                            <div class="col text-center">
                                <img id="imgview" width="100" src="@Url.Content(Model.ImagePath)" />
                            </div>
                        </div>
                        <div class="row">
                            <div class="col text-center">
                                <h3>Edit Specialist</h3>
                            </div>
                        </div>
                        <div class="form-horizontal">
                            <div class="row">
                                <div class="col">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ImagePath, htmlAttributes: new { @class = "control-label" })
                                        <input onchange="readURL(this)" class="form-control-file" type="file" name="ImageFile" id="ImageFile" required />
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Workplace, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Workplace, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Workplace, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.Description, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.Email, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label" })
                                        @Html.TextBoxFor(model => model.PhoneNo, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            @*<div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                            <div class="row">
                                <div class="col-md-10 mx-auto">
                                    <div class="form-group">
                                        <input type="submit" value="Update" class="btn btn-info btn-block" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>

@section scripts{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#imgview').attr('src', e.target.result);
                };

                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

