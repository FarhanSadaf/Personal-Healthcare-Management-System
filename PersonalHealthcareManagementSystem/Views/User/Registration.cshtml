@model PersonalHealthcareManagementSystem.Models.user.User

@{
    ViewBag.Title = "Registration";
    ViewBag.NavBarId = "Registration";
}

    <div class="container">
        @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
        {
            if (ViewBag.Message != null)
            {
                <div class="alert alert-success">
                    <strong>Success!</strong>@ViewBag.Message
                </div>
            }
        }
        else
        {
            using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="row">
                    <div class="col-md-7 mx-auto mt-3">
                        <div class="card border-success">
                            <div class="card-body">
                                <div class="row">
                                    <div class="col text-center">
                                        <img width="120px" src="~/Images/kyc.png" />
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col text-center">
                                        <h3>Register</h3>
                                    </div>
                                </div>
                                <div class="form-horizontal">
                                    <div class="row">
                                        <div class="col">
                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label " })
                                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.EmailId, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.EmailId, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.EmailId, "", new { @class = "text-danger" })
                                                @Html.ValidationMessage("EmailExist", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.DateOfBirth, htmlAttributes: new { @class = "control-label" })
                                                @Html.TextBoxFor(model => model.DateOfBirth, htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label " })
                                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                <input type="submit" value="Register" class="btn btn-success btn-block" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="row">
                                        <div class="col-md-10 mx-auto">
                                            <div class="form-group">
                                                <a style="text-decoration: none" href="/User/Login"><input type="button" value="Login" class="btn btn-info btn-block" /></a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                if (ViewBag.Message != null)
                {
                    <div class="alert alert-danger">
                        <strong>Error!</strong>@ViewBag.Message
                    </div>
                }
            }
        }
    </div>


@section scripts
{
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
    <script>
        $(document).ready(function () {
            $("#DateOfBirth").datepicker({
                changeMonth: true,
                changeYear: true,
                yearRange: '1940:2010',
                dateFormat: "d MM, yy"
            });
        });
    </script>
}